name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - '.gitattributes'
      - '.vscode/**'
      - '.editorconfig'
      - '.prettierrc'
      - '.prettierignore'
      - '.env.example'
      - 'LICENSE'
      - '.github/workflows/**'
      
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - '.gitattributes'
      - '.vscode/**'
      - '.editorconfig'
      - '.prettierrc'
      - '.prettierignore'
      - '.env.example'
      - 'LICENSE'
      - '.github/workflows/**'

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  JAVA_VERSION: '21'
  NX_PARALLEL: 3

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      has-node: ${{ steps.filter.outputs.node }}
      has-java: ${{ steps.filter.outputs.java }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            node:
              - 'apps/**/src/**/*.ts'
              - 'apps/**/src/**/*.js'
              - 'libs/**/*.ts'
              - 'libs/**/*.js'
              - 'package.json'
              - 'package-lock.json'
              - 'nx.json'
              - 'tsconfig*.json'
              - 'jest.config.ts'
              - 'jest.preset.js'
              - 'eslint.config.mjs'
            java:
              - 'apps/**/src/**/*.java'
              - 'apps/**/build.gradle'
              - 'apps/**/settings.gradle'
              - 'apps/**/gradle.properties'

  ci-node:
    name: CI - NestJS
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.has-node == 'true'
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: nx-${{ runner.os }}-
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Setup Nx SHAs
        uses: nrwl/nx-set-shas@v4
      
      - name: Lint affected projects
        run: npx nx affected -t lint --parallel=${{ env.NX_PARALLEL }} --exclude='*-e2e'
      
      - name: Test affected projects
        run: npx nx affected -t test --parallel=${{ env.NX_PARALLEL }} --exclude='*-e2e'

  ci-java:
    name: CI - Spring Boot
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.has-java == 'true'
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'
      
      - name: Setup Node.js (for Nx)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: nx-${{ runner.os }}-
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Setup Nx SHAs
        uses: nrwl/nx-set-shas@v4
      
      - name: Grant execute permission
        run: find apps -name "gradlew" -exec chmod +x {} \;
      
      - name: Test affected Java services
        run: npx nx affected -t test --parallel=2 --exclude='*-e2e'